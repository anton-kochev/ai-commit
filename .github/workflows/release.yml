name: Build and Release

# Trigger only when a version tag like v1.2.3 is pushed
on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: darwin-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: darwin-arm64

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Rust toolchain
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      # Cache Cargo dependencies
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-cargo-

      # Special handling for cross-compilation to ARM macOS
      - name: Build for ARM macOS
        if: matrix.target == 'aarch64-apple-darwin'
        run: |
          rustup target add aarch64-apple-darwin
          cargo build --release --target aarch64-apple-darwin

      # Build for normal targets
      - name: Build for target
        if: matrix.target != 'aarch64-apple-darwin'
        run: cargo build --release --target ${{ matrix.target }}

      # Create tarball archive
      - name: Create tarball
        run: |
          mkdir -p dist
          cd target/${{ matrix.target }}/release
          tar -czf ../../../dist/ai-commit-${{ matrix.target }}.tar.gz ai-commit
          cd -

      # Upload artifacts for later use
      - name: Move artifacts for later use
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts
          cp dist/ai-commit-${{ matrix.target }}.tar.gz $GITHUB_WORKSPACE/artifacts/

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: List artifacts
        run: |
          find $GITHUB_WORKSPACE -type f -name "*.tar.gz" || echo "No tarballs found in workspace"
          echo "Workspace contents:"
          ls -la $GITHUB_WORKSPACE

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add Rust targets
        run: |
          rustup target add x86_64-unknown-linux-gnu
          rustup target add x86_64-apple-darwin
          rustup target add aarch64-apple-darwin

      - name: Build Linux binary
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu
          mkdir -p dist
          cd target/x86_64-unknown-linux-gnu/release
          tar -czf ../../../dist/ai-commit-x86_64-unknown-linux-gnu.tar.gz ai-commit
          cd -

      - name: Build macOS x86_64 binary
        run: |
          mkdir -p dist
          cargo build --release --target x86_64-apple-darwin
          cd target/x86_64-apple-darwin/release
          tar -czf ../../../dist/ai-commit-x86_64-apple-darwin.tar.gz ai-commit
          cd -

      - name: Build macOS ARM binary
        run: |
          mkdir -p dist
          cargo build --release --target aarch64-apple-darwin
          cd target/aarch64-apple-darwin/release
          tar -czf ../../../dist/ai-commit-aarch64-apple-darwin.tar.gz ai-commit
          cd -

      - name: Generate checksums
        run: |
          find . -type f -name "*.tar.gz" | sort | xargs sha256sum > checksums.txt
          cat checksums.txt

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/*.tar.gz
            checksums.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_PAT || secrets.GITHUB_TOKEN }}
