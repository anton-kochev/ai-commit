name: Build and Release

# Trigger only when a version tag like v1.2.3 is pushed
on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build Linux binary
        run: |
          cargo build --release
          mkdir -p dist
          cd target/release
          tar -czf ../../dist/ai-commit-x86_64-unknown-linux-gnu.tar.gz ai-commit
          cd -

      - name: Upload Linux artifact
        uses: actions/upload-artifact@master
        with:
          name: linux-binary
          path: dist/ai-commit-x86_64-unknown-linux-gnu.tar.gz
  build-macos:
    name: Build for macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install OpenSSL
        run: |
          brew install openssl@3
          echo "OPENSSL_DIR=$(brew --prefix openssl@3)" >> $GITHUB_ENV

      - name: Add macOS targets
        run: |
          rustup target add x86_64-apple-darwin
          rustup target add aarch64-apple-darwin

      - name: Build macOS x86_64 binary (native)
        run: |
          mkdir -p dist
          # Build for current architecture (x86_64 on GitHub runners)
          cargo build --release
          cd target/release
          tar -czf ../../dist/ai-commit-x86_64-apple-darwin.tar.gz ai-commit
          cd -

      - name: Build macOS ARM binary
        env:
          DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
          MACOSX_DEPLOYMENT_TARGET: 11.0
        run: |
          # For Apple Silicon (ARM)
          rustup target add aarch64-apple-darwin

          # Configure for cross-compilation with OpenSSL
          cargo build --release --target aarch64-apple-darwin
          cd target/aarch64-apple-darwin/release
          tar -czf ../../../dist/ai-commit-aarch64-apple-darwin.tar.gz ai-commit
          cd -

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@master
        with:
          name: macos-binaries
          path: dist/*.tar.gz

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@master
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p dist
          cp artifacts/linux-binary/ai-commit-x86_64-unknown-linux-gnu.tar.gz dist/
          cp artifacts/macos-binaries/*.tar.gz dist/

          # Generate checksums
          cd dist
          sha256sum *.tar.gz > ../checksums.txt
          cd ..
          cat checksums.txt

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/*.tar.gz
            checksums.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_PAT || secrets.GITHUB_TOKEN }}
