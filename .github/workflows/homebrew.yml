name: Publish Homebrew Bottle

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  update-homebrew-formula:
    name: Update Homebrew Formula
    runs-on: ubuntu-latest

    steps:
      # 1. Fetch the ai‑commit binary attached by release.yml
    #   - name: Download release asset
    #     env:
    #       GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     run: |
    #       ASSET_URL=$(gh api repos/${{ github.repository }}/releases/${{ github.event.release.id }} \
    #                    --jq '.assets[] | select(.name=="ai-commit") | .url')
    #       if [ -z "$ASSET_URL" ]; then
    #         echo "::error::Could not find 'ai-commit' asset on release." && exit 1
    #       fi
    #       gh api -H "Accept: application/octet-stream" "$ASSET_URL" > ai-commit
    #       chmod +x ai-commit
    #       tar -czf ai-commit-macos-universal.tar.gz ai-commit

      # 2. Calculate SHA‑256
    #   - name: Compute SHA256
    #     id: sha
    #     run: echo "sha=$(shasum -a 256 ai-commit-macos-universal.tar.gz | awk '{print $1}')" >> $GITHUB_OUTPUT

      # 3. Upload the bottle tarball (overwrites if it already exists)
    #   - name: Upload bottled tarball
    #     uses: softprops/action-gh-release@v1
    #     with:
    #       files: ai-commit-macos-universal.tar.gz
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      # 4. Check out the Homebrew tap repo
      - name: Checkout tap repo
        uses: actions/checkout@v3
        with:
          repository: anton-kochev/homebrew-ai-commit   # <- your tap repo
          token: ${{ secrets.HOMEBREW_TAP_PAT }}
          path: tap

      # 5. Update the formula with new URL, SHA and version
      - name: Download release assets and calculate checksums
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          TAG="v${VERSION}"

          # Download macOS ARM binary and calculate SHA
          curl -L "https://github.com/yourusername/ai-commit/releases/download/${TAG}/ai-commit-aarch64-apple-darwin.tar.gz" -o aarch64-apple-darwin.tar.gz
          MACOS_ARM_SHA=$(shasum -a 256 aarch64-apple-darwin.tar.gz | cut -d' ' -f1)

          # Download macOS x86_64 binary and calculate SHA
          curl -L "https://github.com/yourusername/ai-commit/releases/download/${TAG}/ai-commit-x86_64-apple-darwin.tar.gz" -o x86_64-apple-darwin.tar.gz
          MACOS_X86_SHA=$(shasum -a 256 x86_64-apple-darwin.tar.gz | cut -d' ' -f1)

          # Download Linux binary and calculate SHA
          curl -L "https://github.com/yourusername/ai-commit/releases/download/${TAG}/ai-commit-x86_64-unknown-linux-gnu.tar.gz" -o x86_64-unknown-linux-gnu.tar.gz
          LINUX_X86_SHA=$(shasum -a 256 x86_64-unknown-linux-gnu.tar.gz | cut -d' ' -f1)

          # Ensure Formula directory exists
          mkdir -p Formula

          # Create or update formula
          cat > Formula/ai-commit.rb << EOF
          class AiCommit < Formula
            desc "Your Rust-based AI commit message generator"
            homepage "https://github.com/yourusername/ai-commit"
            version "${VERSION}"

            on_macos do
              if Hardware::CPU.arm?
                url "https://github.com/yourusername/ai-commit/releases/download/v#{version}/ai-commit-aarch64-apple-darwin.tar.gz"
                sha256 "${MACOS_ARM_SHA}"
              else
                url "https://github.com/yourusername/ai-commit/releases/download/v#{version}/ai-commit-x86_64-apple-darwin.tar.gz"
                sha256 "${MACOS_X86_SHA}"
              end
            end

            on_linux do
              if Hardware::CPU.intel?
                url "https://github.com/yourusername/ai-commit/releases/download/v#{version}/ai-commit-x86_64-unknown-linux-gnu.tar.gz"
                sha256 "${LINUX_X86_SHA}"
              end
            end

            def install
              bin.install "ai-commit"
            end

            test do
              system "#{bin}/ai-commit", "--version"
            end
          end
          EOF
      - name: Commit and push updated formula
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add Formula/ai-commit.rb
          git commit -m "Update ai-commit to ${VERSION}"
          git push
